/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/

@use 'sass:map';
@use './tokens' as awsui;
@use './motion' as styles;
@use './typography/' as typography;
@use './forms/' as mixins;
@use '../hooks/focus-visible/' as focus-visible;
@use '../../link/constants.scss' as constants;

@mixin link-style($variant) {
  color: map.get($variant, 'text-color-default');
  font-weight: map.get($variant, 'font-weight');
  letter-spacing: map.get($variant, 'letter-spacing');
  // Fallback for browsers that do not support text-decoration-color, like IE11
  text-decoration: map.get($variant, 'decoration');
  /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
  text-decoration-color: map.get($variant, 'decoration-color');
  text-decoration-thickness: map.get($variant, 'decoration-thickness');

  @include styles.with-motion {
    transition-property: color, text-decoration;
    transition-duration: awsui.$motion-duration-refresh-only-medium;
  }

  &:hover {
    cursor: pointer;
    color: map.get($variant, 'text-color-hover');
  }

  &:focus {
    outline: none;
  }

  &:active {
    color: map.get($variant, 'text-color-active');
  }

  &:active,
  &:focus,
  &:hover {
    text-decoration: underline;
    /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
    text-decoration-color: map.get($variant, 'decoration-color-hover');
    text-decoration-thickness: map.get($variant, 'decoration-thickness');
  }
}

@mixin link-default {
  @include link-style(map.get(constants.$link-variants, 'secondary'));
}

/* Style used for links in slots/components that are text heavy, to help links stand out among 
surrounding text. (WCAG F73) https://www.w3.org/WAI/WCAG21/Techniques/failures/F73#description */
@mixin link-inline {
  @include link-style(map.get(constants.$link-variants, 'primary'));
}

// Need style as a mixin for tag editor only, because it needs special keyup/keydown behavior and thus cannot use the Link component
@mixin link-recovery {
  @include typography.font-smoothing;
  @include link-style(map.get(constants.$link-variants, 'recovery'));
}
