/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/

@use '../internal/styles/tokens' as awsui;
@use '../internal/styles' as styles;
@use './shared' as shared;

.root {
  @include styles.styles-reset;
  display: block;
  word-wrap: break-word;

  &.variant-default,
  &.variant-stacked {
    @include shared.borders-and-shadows;
    background-color: awsui.$color-background-container-content;
  }

  &.variant-stacked:not(:last-child) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }

  &.variant-stacked + &.variant-stacked {
    @include shared.divider;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    box-shadow: awsui.$shadow-container-stacked;
  }
}

.header {
  background-color: awsui.$color-background-container-header;
  // sticky positioning may be disabled (on mobile or if browser does not support it),
  // but some markup still requires a new stacking context
  &-sticky-disabled {
    position: relative;
    z-index: 1;
  }
  &-sticky-enabled {
    top: 0;
    /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
    position: sticky;
    z-index: 800;
  }
  &-stuck {
    box-shadow: awsui.$shadow-sticky-embedded;
    border: 0;
    border-radius: 0;
  }
  &-dynamic-height.header-stuck {
    // to prevent the block from changing its height when variant dynamically changes
    margin-bottom: calc(#{awsui.$font-heading-xl-line-height} - #{awsui.$font-heading-l-line-height});
  }
  &:not(:empty) {
    border-bottom: awsui.$border-container-sticky-width solid awsui.$color-border-container-divider;
  }
  &.with-paddings {
    padding: shared.$header-padding;
  }
  &-variant-cards {
    @include shared.borders-and-shadows;
    &:not(:empty) {
      // bottom shadow does not appear in IE11 due to the presence of background color
      // Adding a bottom border
      border-bottom: 1px solid #d5dbdb;
      /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
      @supports (--css-variable-support-check: #000) {
        border-bottom: 0;
      }
    }
    &.header-stuck {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }
  &-variant-full-page.header-stuck {
    box-shadow: awsui.$shadow-sticky;
  }
}

/*
The dynamic height dark header needs a background that will cover
the default white background of the container component.
*/
.dark-header {
  background-color: awsui.$color-background-layout-main;
}

.content.with-paddings {
  padding: awsui.$space-scaled-l awsui.$space-container-horizontal;
  .header + & {
    padding-top: awsui.$space-container-content-top;
  }
}

/*
 * Applies border-radius constraint from parent to children with `overflow:auto`
 * to prevent content exceeding the parent container if border-radius is not 0.
 * Stacked containers mirror the parent behavior by having border-radius set to 0.
 */
.root.header,
.root.content:first-child {
  border-top-left-radius: awsui.$border-container-radius;
  border-top-right-radius: awsui.$border-container-radius;
  overflow: auto;
}

.root.header:last-child,
.root.content:last-child {
  border-bottom-left-radius: awsui.$border-container-radius;
  border-bottom-right-radius: awsui.$border-container-radius;
  overflow: auto;
}

.root.variant-stacked + .root.variant-stacked > .header,
.root.variant-stacked + .root.variant-stacked > .content:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.footer {
  &.with-paddings {
    padding: shared.$footer-padding;
  }
  &.with-divider {
    @include shared.divider;
  }
}
