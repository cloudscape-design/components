/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/

@use '../internal/styles/tokens' as awsui;
@use '../internal/styles' as styles;
@use './shared' as shared;

.root {
  @include styles.styles-reset;
  word-wrap: break-word;
  position: relative;

  &.fit-height {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  &.variant {
    &-default,
    &-stacked {
      // Border and shadows are applied with ::before and ::after elements (respectively)
      @include shared.borders-and-shadows;
      background-color: awsui.$color-background-container-content;
    }

    // Meld container bottom corners into next adjoining container
    &-stacked:not(:last-child),
    &-stacked:not(:last-child)::before,
    &-stacked:not(:last-child)::after {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
    // Meld container top corners into preceding container
    &-stacked + &-stacked,
    &-stacked + &-stacked::before,
    &-stacked + &-stacked::after {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    // Replace container border with a divider
    &-stacked + &-stacked::before {
      @include shared.divider;
    }
    // Reset container shadow to prevent unwanted overflow
    &-stacked + &-stacked::after {
      box-shadow: awsui.$shadow-container-stacked;
    }
  }

  // To ensure the top border/divider is visible on sticky elements which have a higher z-index
  &.sticky-enabled {
    &::before {
      top: calc(-1 * #{awsui.$border-container-top-width});
    }
    &.variant-stacked::before {
      top: calc(-1 * #{awsui.$border-divider-section-width});
    }
  }
}

.header {
  background-color: awsui.$color-background-container-header;
  border-top-left-radius: awsui.$border-radius-container;
  border-top-right-radius: awsui.$border-radius-container;

  // sticky positioning may be disabled (on mobile or if browser does not support it),
  // but some markup still requires a new stacking context
  &-sticky-disabled {
    position: relative;
    z-index: 1;
  }

  &-sticky-enabled {
    top: 0;
    /* stylelint-disable-next-line plugin/no-unsupported-browser-features */
    position: sticky;
    z-index: 800;
  }

  &-stuck {
    border-radius: 0;
    &::before {
      border: 0;
    }
    &:not(.header-variant-cards) {
      box-shadow: awsui.$shadow-sticky-embedded;
    }
  }

  &-dynamic-height.header-stuck {
    // to prevent the block from changing its height when variant dynamically changes
    margin-bottom: calc(#{awsui.$font-heading-xl-line-height} - #{awsui.$font-heading-l-line-height});
  }

  &:not(:empty) {
    border-bottom: awsui.$border-container-sticky-width solid awsui.$color-border-container-divider;
  }

  &.with-paddings {
    padding: shared.$header-padding;
  }

  &.with-hidden-content {
    border-bottom-left-radius: awsui.$border-radius-container;
    border-bottom-right-radius: awsui.$border-radius-container;
  }

  &-variant-cards {
    &:not(.header-sticky-enabled) {
      position: relative;
    }
    @include shared.borders-and-shadows;

    &.header-stuck::after,
    &.header-stuck::before {
      border: 0;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }

  &-variant-full-page.header-stuck {
    box-shadow: none;

    &::after {
      content: '';

      position: absolute;
      right: 0;
      left: 0;
      bottom: 0;
      top: 0;

      box-shadow: awsui.$shadow-sticky;
      // This polygon only shows the part of the shadow that is lower than the element itself.
      clip-path: polygon(-999% 100%, 999% 100%, 999% 999%, -999% 999%);
    }
  }
}

/*
The dynamic height dark header needs a background that will cover
the default white background of the container component.
*/
.dark-header {
  background-color: awsui.$color-background-layout-main;
}

.content {
  .fit-height > & {
    flex: 1;
    overflow: auto;
  }
  &.with-paddings {
    padding: awsui.$space-scaled-l awsui.$space-container-horizontal;

    .header + & {
      padding-top: awsui.$space-container-content-top;
    }
  }
}

.footer {
  &.with-paddings {
    padding: shared.$footer-padding;
  }

  &.with-divider {
    @include shared.divider;
  }
}
