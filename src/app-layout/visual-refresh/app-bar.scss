/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/

@use '../../internal/styles/' as styles;
@use '../../internal/styles/tokens' as awsui;
@use '../../internal/generated/custom-css-properties/index.scss' as custom-props;

section.appbar {
  align-items: center;
  box-sizing: border-box;
  display: grid;
  grid-column: 3;
  grid-row: 2;
  grid-template-columns: auto minmax(0, 1fr) auto;

  > .appbar-nav {
    grid-column: 1;
    margin-right: awsui.$space-m;
  }

  /* 
  Because the Breadcrumbs component cannot be styled directly it is 
  wrapped in a generic element that will apply style adjustments as needed.
  */
  > .breadcrumbs {
    grid-column: 2;
    background-color: awsui.$color-background-layout-main;
  }

  > .appbar-tools,
  > .drawers-mobile-triggers-container {
    grid-column: 3;
    margin-left: awsui.$space-m;
  }

  /*
  In large viewports the buttons that trigger the Navigation and Tools 
  drawers from the AppBar are suppressed and replaced by the buttons 
  that render in the Navigation and Tools components. Additionally, 
  the content wrapper around the breadcrumbs component has variable 
  top and bottom padding based on whether or not the Notifications 
  and Header components exist.
  */
  @include styles.media-breakpoint-up(styles.$breakpoint-x-small) {
    /*
    If Breadcrumbs do not exist then the AppBar should be suppressed
    because in large viewports the triggers are rendered
    in the Navigation and Tools components.
    */
    &:not(.has-breadcrumbs) {
      display: none;
    }

    > .appbar-nav,
    > .appbar-tools,
    > .drawers-mobile-triggers-container {
      display: none;
    }

    /*
    If there is no Notifications content then the AppBar should 
    appear to be the first rendered content even though the 
    Notifications DOM node will still exist. The top padding 
    should vertically align it with the Navigation and Tools circular buttons.
    */
    > .breadcrumbs:not(.has-notifications-content) {
      padding-top: awsui.$space-scaled-m;
    }

    /*
    If there is Notifications content then the AppBar should have 
    minimal top padding in addition to the bottom margin on the 
    Notifications component.
    */
    > .breadcrumbs.has-notifications-content {
      padding-top: awsui.$space-scaled-2x-s;
    }

    /*
    If the Header does not exist then the AppBar is the last 
    rendered content before the Main component. Additional 
    bottom padding is added to create space between the 
    Breadcrumbs and Main components that expands the height 
    of the dark header.
    */
    > .breadcrumbs:not(.has-header):not(.has-dynamic-overlap-height),
    > .breadcrumbs:not(.has-header).content-type-wizard {
      padding-bottom: awsui.$space-m;
    }

    /*
    Table and cards content types implement a custom dark header. 
    Minimal bottom padding should be on the breadcrumbs to
    reduce the the vertical distance from the main content.
    */
    > .breadcrumbs.content-type-cards,
    > .breadcrumbs.content-type-table {
      padding-bottom: awsui.$space-xxs;
    }

    /*
    If a child component tells the AppLayout to have a sticky 
    background (typically because of a stickyHeader with a 
    full-page variant) the z-index of the breadcrumbs needs to 
    be lifted so it doesn't render behind the background element.
    */
    > .breadcrumbs.has-sticky-background {
      z-index: 799;
    }
  }

  /*
  In mobile viewports the AppBar becomes sticky and is repositioned to
  span the entire column definition of the Layout grid.
  */
  @include styles.media-breakpoint-down(styles.$breakpoint-x-small) {
    background-color: awsui.$color-background-home-header;
    border-bottom: 1px solid awsui.$color-border-divider-default;
    box-shadow: awsui.$shadow-panel-toggle;
    grid-column: 1 / span 5;
    grid-row: 1;
    height: calc(2 * #{awsui.$space-m} + #{awsui.$space-scaled-xs});
    padding: 0 awsui.$space-m;
    position: sticky;
    top: var(#{custom-props.$offsetTop});
    z-index: 1000;

    // the Navigation and Tools buttons resume their grid column position
    > .appbar-nav,
    > .appbar-tools,
    > .drawers-mobile-triggers-container {
      display: block;
    }

    /*
    Remove any existing top and bottom padding from the Breadcrumbs since
    they are now sticky positioned in the viewport with the AppBar.
    */
    > .breadcrumbs {
      padding: 0;
    }
  }
}
