/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/

@use '../../internal/styles/' as styles;
@use '../../internal/styles/tokens' as awsui;
@use '../../internal/generated/custom-css-properties/index.scss' as custom-props;

.container {
  grid-area: main;
  padding-bottom: awsui.$space-layout-content-bottom;

  /*
  If the split panel is in the bottom position additional padding will need to be
  added to the content area. This is to ensure that the user is able to scroll
  far enough to see all of the content that would otherwise be obscured by the
  sticky position of the split panel.
  */
  &.has-split-panel.split-panel-position-bottom {
    padding-bottom: calc(var(#{custom-props.$splitPanelHeight}) + #{awsui.$space-layout-content-bottom});
  }

  /*
  If disableContentPaddings is enabled then the Main content has a different
  behavior inside the Layout grid. By default it will render across the entire
  grid column span. If the Navigation is open on the left, we increment the
  start column by one. If the Tools or Split Panel (in side position) is open
  on the right, we decrement the column end by one.
  */
  &.disable-content-paddings {
    grid-column: 1 / 6;
    padding: 0;

    @include styles.media-breakpoint-up(styles.$breakpoint-x-small) {
      &.is-navigation-open {
        grid-column-start: 2;
      }

      &.is-tools-open,
      &.is-split-panel-open.split-panel-position-side,
      &.has-active-drawer {
        grid-column-end: 5;
      }
    }
  }
}
