{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/components/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport interface ComponentDefinition {\n  name: string;\n  dashCaseName: string;\n  /** @deprecated */\n  releaseStatus: string;\n  /** @deprecated */\n  version?: string;\n  /** @deprecated */\n  description?: string;\n  systemTags?: Array<string>;\n  properties: ComponentProperty[];\n  regions: ComponentRegion[];\n  functions: ComponentFunction[];\n  events: EventHandler[];\n  types: Record<string, Record<string, never>>;\n}\n\ninterface Taggable {\n  deprecatedTag?: string;\n  visualRefreshTag?: string;\n  i18nTag?: true | undefined;\n  systemTags?: Array<string>;\n}\n\nexport interface ValueDescription {\n  systemTags: Array<string>;\n}\n\nexport interface ComponentProperty extends Taggable {\n  name: string;\n  description?: string;\n  optional: boolean;\n  type: string;\n  inlineType?: TypeDefinition;\n  defaultValue?: string;\n  analyticsTag?: string;\n}\n\nexport interface ComponentRegion extends Taggable {\n  name: string;\n  description?: string;\n  displayName?: string;\n  isDefault: boolean;\n}\n\nexport interface ComponentFunction {\n  name: string;\n  description?: string;\n  parameters: FunctionParameter[];\n  returnType: string;\n}\n\nexport type TypeDefinition = ObjectDefinition | FunctionDefinition | UnionTypeDefinition;\n\nexport interface ObjectDefinition {\n  name: string;\n  type: 'object';\n  properties: ObjectDefinitionProperty[];\n}\n\nexport interface ObjectDefinitionProperty {\n  name: string;\n  optional: boolean;\n  type: string;\n}\n\nexport interface FunctionDefinition {\n  name: string;\n  type: 'function';\n  returnType: string;\n  parameters: FunctionParameter[];\n}\n\nexport interface FunctionParameter {\n  name: string;\n  type: string;\n}\n\nexport interface UnionTypeDefinition {\n  name: string;\n  type: 'union';\n  valueDescriptions?: Record<string, ValueDescription>;\n  values: string[];\n}\n\nexport interface EventHandler extends Taggable {\n  name: string;\n  description?: string;\n  detailType?: string;\n  detailInlineType?: TypeDefinition;\n  cancelable: boolean;\n}\n"]}