{"version":3,"file":"component-definition.js","sourceRoot":"","sources":["../../src/components/component-definition.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport ts from 'typescript';\n\nimport { extractDeclaration, stringifyType } from './type-utils';\nimport type {\n  ComponentDefinition,\n  ComponentFunction,\n  ComponentProperty,\n  ComponentRegion,\n  EventHandler,\n} from './interfaces';\nimport type { ExtractedDescription } from './extractor';\nimport { extractFunctions, extractProps, extractTypes } from './extractor';\nimport { getObjectDefinition } from './object-definition';\n\nfunction getCommentTag(description: ExtractedDescription, name: string) {\n  const tag = description.tags.find(tag => tag.name === name);\n  return tag ? tag.text ?? '' : undefined;\n}\n\nfunction getCommentTags(description: ExtractedDescription, name: string) {\n  const tags = description.tags\n    .filter(tag => tag.name === name)\n    .map(tag => {\n      if (!tag.text) {\n        throw new Error(`Tag ${name} is missing text`);\n      }\n      return tag.text;\n    });\n  return tags.length > 0 ? tags : undefined;\n}\n\nfunction castI18nTag(tag: string | undefined) {\n  return tag === undefined ? undefined : true;\n}\n\nexport function buildComponentDefinition(\n  name: string,\n  dashCaseName: string,\n  propsSymbol: ts.Symbol,\n  defaultValues: Record<string, string>,\n  componentDescription: ExtractedDescription,\n  checker: ts.TypeChecker\n): ComponentDefinition {\n  const props = extractProps(propsSymbol, checker);\n  const types = extractTypes(propsSymbol, checker);\n  const functions = extractFunctions(\n    name,\n    types.find(typeNode => typeNode.name.text === 'Ref'),\n    checker\n  );\n  const regions = props.filter(prop => prop.type === 'React.ReactNode');\n  const events = props.filter(prop => prop.name.match(/^on[A-Z]/));\n  const onlyProps = props.filter(prop => !events.includes(prop) && !regions.includes(prop));\n\n  return {\n    name,\n    dashCaseName,\n    releaseStatus: 'stable',\n    description: componentDescription.text,\n    systemTags: getCommentTags(componentDescription, 'awsuiSystem'),\n    regions: regions.map(\n      (region): ComponentRegion => ({\n        name: region.name,\n        displayName: getCommentTag(region.description, 'displayname'),\n        description: region.description.text,\n        isDefault: region.name === 'children',\n        systemTags: getCommentTags(region.description, 'awsuiSystem'),\n        visualRefreshTag: getCommentTag(region.description, 'visualrefresh'),\n        deprecatedTag: getCommentTag(region.description, 'deprecated'),\n        i18nTag: castI18nTag(getCommentTag(region.description, 'i18n')),\n      })\n    ),\n    functions: functions.map(\n      (func): ComponentFunction => ({\n        name: func.name,\n        description: func.description.text,\n        returnType: stringifyType(func.rawType.getNonNullableType().getCallSignatures()[0].getReturnType(), checker),\n        parameters: func.rawType\n          .getNonNullableType()\n          .getCallSignatures()[0]\n          .getParameters()\n          .map((param): ComponentFunction['parameters'][0] => {\n            const paramType = checker.getTypeAtLocation(extractDeclaration(param));\n            return {\n              name: param.name,\n              type: stringifyType(paramType, checker),\n            };\n          }),\n      })\n    ),\n    properties: onlyProps.map((property): ComponentProperty => {\n      const { type, inlineType } = getObjectDefinition(property.type, property.rawType, property.rawTypeNode, checker);\n      return {\n        name: property.name,\n        type: type,\n        inlineType: inlineType,\n        optional: property.isOptional,\n        description: property.description.text,\n        defaultValue: defaultValues[property.name],\n        systemTags: getCommentTags(property.description, 'awsuiSystem'),\n        visualRefreshTag: getCommentTag(property.description, 'visualrefresh'),\n        deprecatedTag: getCommentTag(property.description, 'deprecated'),\n        analyticsTag: getCommentTag(property.description, 'analytics'),\n        i18nTag: castI18nTag(getCommentTag(property.description, 'i18n')),\n      };\n    }),\n    events: events.map((event): EventHandler => {\n      const { detailType, detailInlineType, cancelable } = extractEventDetails(\n        event.rawType,\n        event.rawTypeNode,\n        checker\n      );\n      return {\n        name: event.name,\n        description: event.description.text,\n        cancelable,\n        detailType,\n        detailInlineType,\n        systemTags: getCommentTags(event.description, 'awsuiSystem'),\n        deprecatedTag: getCommentTag(event.description, 'deprecated'),\n      };\n    }),\n    types: Object.fromEntries(types.map(type => [type.name.text, {}])),\n  };\n}\n\nfunction extractEventDetails(type: ts.Type, typeNode: ts.TypeNode | undefined, checker: ts.TypeChecker) {\n  const realType = type.getNonNullableType();\n  const handlerName = realType.aliasSymbol?.getName();\n  if (handlerName !== 'CancelableEventHandler' && handlerName !== 'NonCancelableEventHandler') {\n    throw new Error(`Unknown event handler type: ${checker.typeToString(realType)}`);\n  }\n  const cancelable = handlerName === 'CancelableEventHandler';\n  const detailType = realType.aliasTypeArguments?.[0];\n  if (detailType && detailType.getProperties().length > 0) {\n    const { type, inlineType } = getObjectDefinition(stringifyType(detailType, checker), detailType, typeNode, checker);\n    return {\n      detailType: type,\n      detailInlineType: inlineType,\n      cancelable,\n    };\n  }\n  return { cancelable };\n}\n"]}