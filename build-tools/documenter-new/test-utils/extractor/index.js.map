{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/test-utils/extractor/index.ts"],"names":[],"mappings":";;AAAA,qEAAqE;AACrE,sCAAsC;AACtC,qCAAmF;AAGnF,uDAAkD;AAElD,SAAS,iBAAiB,CAAC,OAA0B;;IACnD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAChD,MAAM,cAAc,GAAG,MAAA,YAAY,CAAC,QAAQ,0CACxC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,EAChC,MAAM,CAAC,CAAC,KAAK,EAAkC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,wBAAc,CAAC,KAAK,CAAC,CAAC;IAErG,2CAA2C;IAC3C,OAAO,cAA8C,CAAC;AACxD,CAAC;AAED,SAAwB,4BAA4B,CAAC,OAA0B;IAC7E,MAAM,cAAc,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAElD,4DAA4D;IAC5D,MAAM,aAAa,GAAwB,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;QACxE,OAAO;YACL,IAAI,EAAE,SAAS,CAAC,IAAI;YACpB,OAAO,EAAE,IAAA,+BAAa,EAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;SACjD,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC;AACvB,CAAC;AAZD,+CAYC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ReflectionKind, DeclarationReflection, ProjectReflection } from 'typedoc';\n\nimport { TestUtilsDoc } from '../interfaces';\nimport { getMethodsDoc } from './get-methods-doc';\n\nfunction getWrapperClasses(project: ProjectReflection): Array<DeclarationReflection> {\n  const projectClone = Object.assign({}, project);\n  const wrapperClasses = projectClone.children\n    ?.flatMap(child => child.children)\n    .filter((child): child is DeclarationReflection => !!child && child.kind === ReflectionKind.Class);\n\n  // Undefined values get filtered out before\n  return wrapperClasses as Array<DeclarationReflection>;\n}\n\nexport default function extractRelevantDocumentation(project: ProjectReflection): TestUtilsDoc[] {\n  const wrapperClasses = getWrapperClasses(project);\n\n  // TODO: Make this output structure match the components one\n  const documentation: Array<TestUtilsDoc> = wrapperClasses.map(classDesc => {\n    return {\n      name: classDesc.name,\n      methods: getMethodsDoc(classDesc.children || []),\n    };\n  });\n\n  return documentation;\n}\n"]}